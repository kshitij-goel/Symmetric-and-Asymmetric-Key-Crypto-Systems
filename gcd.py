#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 13 18:58:19 2017

@author: mahalakshmimaddu
"""
#from fractions import gcd
import math,base64

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m
c1=7436274066343133562928445506943994695009152291995252089013309784372468938589828572003088313643548794891005336060145493014679698894569651350541700233414913490274707895402824820325701524251157272633286026750110779880831295182087432765115576602599139046240576286039463282600254283653899600852179938783014740670025234509052746868560638949767869695771480633611417776747033620584213078782315717849927781573668360642317444921564879559337361075618059803680949427672264436028683029979561383031149643007431042612366558167328712255773406962426713396569118744501499605508613244053232430963186727075415328306704252197153104857134

c2=7210383201468160115339022426527001764418330066936573093212806284506031761619292644055285880052028759010322460357279938627189624734821721993026037393484994870166985996933960761718425034455702438978570909358734117014629761695828552557772475820817736270762242521830665905964828832509413712392988444468968230210360035033997838411847355186023229969913277857788845842154615040585637939497586098846693060408422392569060547937901368269383675462023664607027016360135289459551169489325924329533892157204473690742705174764204878405140405777756110691600525642081211234772893522403929712229168688934520019430915807293532021652671

n=29327850486975077954317709506799622915588857966896778318115598344455890070959927006926810612222024225768341822112778000187507517166593745638960588299846705687790684051482653083351632939692655936840525916241013974046302069194293072669512824844198226032545778378323305463345116397300592496915493258706173118434162041944344570079998400688655706201477504735565673872643797590308549327458490185382239659524831890657732834868058859381713915190453642358738553777011410499179974986281138263624724940119570258010301077726098830442179627135846653352495979410539119788164279306621154419569604188731389339461710075619781810316627

e=65537

c=3179740012625133057570999348796020887970038322732777228738492234531231820889307329189409692754561923056803476549939303529718689858702338843509879916826984613997453938464073455419919859561724235119815171967343259316816605736370751069002667018517825866898504185521662163831290151087168895657274298164106454476033402855485248343666287900812381327499471739362306857120107690923436034512063607579122064675524255486740345171955127712070661358079770890507106789610244928458921800548246009448158666622655288829368575471450216764713710647937499935145033242905602801423582283102052143812739996246746558184196761974680829657914

diff=c1-c2
print ('diff:',diff)
p=math.gcd(diff,n)
print ('p:',p)

q=int(int(n)//int(p))
print ('q:',q)

phin=int((p-1)*(q-1))
print ('phi_n:',phin)


d = modinv(e,phin)
print ('d:',d)
#d_64=base64.b64encode(d)

m=pow(c,d,n)
print ('Decrypted AES:',m)